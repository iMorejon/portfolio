---
import { BASICS_ES } from "@/utils/consts"
import GitHub from "@/icons/GitHub.astro"
import LinkedIn from "@/icons/LinkedIn.astro"

const { profiles } = BASICS_ES

const SOCIAL_ICONS = {
  github: GitHub,
  linkedin: LinkedIn,
}
const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network]
  const firstLetter = network[0].toUpperCase()

  return {
    id: network,
    section: "Social",
    title: `Visitar ${network}`,
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  }
})
---

<footer id='normal-footer' class='no-print'>
  Pulsa <kbd>Cmd</kbd> + <kbd>K</kbd> para abrir la paleta de comandos.
</footer>

<div id='footer-button' class='no-print'>
  <svg
    xmlns='http://www.w3.org/2000/svg'
    class='icon icon-tabler icon-tabler-command'
    width='32'
    height='32'
    viewBox='0 0 24 24'
    stroke-width='1.5'
    stroke='#777'
    fill='none'
    stroke-linecap='round'
    stroke-linejoin='round'
  >
    <path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
    <path
      d='M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10'
    ></path>
  </svg>
</div>

<ninja-keys
  data-info={JSON.stringify(profilesInfo)}
  placeholder='Buscar comando'
  hideBreadcrumbs></ninja-keys>

<script>
  import "ninja-keys"

  interface Info {
    id: string
    section: string
    title: string
    url: string
    icon: string
    hotkey: string
    handler?: () => void
  }

  interface NinjaKeysElement extends HTMLElement {
    data: Info[]
  }

  const ninja = document.querySelector<NinjaKeysElement>("ninja-keys")!
  const footerButton = document.getElementById("footer-button")

  footerButton?.addEventListener("click", () => {
    var event = new KeyboardEvent("keydown", {
      key: "K",
      code: "KeyK",
      keyCode: 75,
      which: 75,
      ctrlKey: true,
      altKey: false,
      shiftKey: false,
      metaKey: false,
    })

    document.dispatchEvent(event)
  })

  if (ninja != null) {
    const info = ninja.getAttribute("data-info") ?? "[]"
    const parsedInfo = JSON.parse(info)

    const data = parsedInfo.map(
      ({ url, hotkey, icon, id, section, title }: Info) => {
        return {
          id,
          title,
          icon,
          hotkey,
          section,
          handler: () => {
            window.open(url, "_blank")
          },
        }
      }
    )

    ninja.data = [
      {
        id: "print",
        title: "Imprimir",
        icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" d="M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0 1 10.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0 .229 2.523a1.125 1.125 0 0 1-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0 0 21 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 0 0-1.913-.247M6.34 18H5.25A2.25 2.25 0 0 1 3 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 0 1 1.913-.247m10.5 0a48.536 48.536 0 0 0-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5Zm-3 0h.008v.008H15V10.5Z" />
  </svg>`,
        hotkey: "ctrl+P",
        section: "Acciones",
        handler: () => {
          window.print()
        },
      },
      ...data,
    ]
  }
</script>

<style>
  @media print {
    ninja-keys {
      display: none !important;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    #normal-footer {
      display: block;
    }

    #footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    #footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    background: #fdfdfd;
    border-top: 1px solid #eee;
    position: fixed;
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 0%);
    width: 60%;
    min-width: 420px;
    max-width: 690px;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;
    border-radius: 15px 15px 0 0;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }

  kbd {
    background: #eee;
    border-radius: 4px;
    padding: 2px 4px;
    font-size: 12px;
  }
</style>
